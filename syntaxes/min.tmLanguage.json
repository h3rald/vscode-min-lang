{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "min",
  "scopeName": "source.min",
  "patterns": [
    {
      "include": "#value"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "include": "#comments-inline"
        },
        {
          "include": "#comments-block"
        },
        {
          "include": "#comments-doc-inline"
        },
        {
          "include": "#comments-doc-block"
        },
        {
          "match": "^#!.*\\n",
          "name": "comment.line.shebang.min"
        }
      ]
    },
    "comments-inline": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.min"
            }
          },
          "match": "(;).*$\\n?",
          "name": "comment.line.semicolon.min"
        }
      ]
    },
    "comments-doc-inline": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.min"
            }
          },
          "match": "(;;).*$\\n?",
          "name": "comment.line.double.semicolon.min"
        }
      ]
    },
    "comments-block": {
      "patterns": [
        {
          "begin": "\\#\\|",
          "end": "\\|\\#",
          "name": "comment.block.hashpipe.min",
          "patterns": [
            {
              "include": "#comments-block"
            }
          ]
        }
      ]
    },
    "comments-doc-block": {
      "patterns": [
        {
          "begin": "\\#\\|\\|",
          "end": "\\|\\|\\#",
          "name": "comment.block.double.hashpipe.min",
          "patterns": [
            {
              "include": "#comments-block"
            }
          ]
        }
      ]
    },
    "number": {
      "match": "(?<=(\\s|^|\\(|\\{))-?[0-9]*\\.?[0-9]+(?=(\\s|\\)|\\}|$))",
      "name": "constant.numeric.min"
    },
    "type": {
      "patterns": [
        {
          "match": "(?<=(\\s|^|\\(|\\{))(int|flt|bool|a|num|str|'sym|quot|dict|dict:[a-z0-9_-]+)(?=(\\s|\\)|\\}|$))",
          "name": "support.type.min"
        }
      ]
    },
    "control-symbol": {
      "patterns": [
        {
          "match": "(?<=(\\s|^|\\(|\\{))(symbol|sigil|input|output|operator|return|include|require|lambda|signature|lambda-bind|bind|define|typeclass|typealias|if|unless|when|foreach|times|while|raise|try|case|with|apply|dequote|quote|quotesym|>>|><|=>|==>|::|=-=|--|->|&&|\\|\\||=%|%|infix-dequote|prefix-dequote|tap|tap!|with|expect|expect-all|expect-any|expect-empty-stack)(?=(\\s|\\)|\\}|$))",
          "name": "keyword.control.min"
        }
      ]
    },
    "quotation": {
      "begin": "(\\()",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.array.begin.min"
        }
      },
      "end": "(\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.array.end.min"
        }
      },
      "name": "meta.structure.array.min",
      "patterns": [
        {
          "include": "#value"
        }
      ]
    },
    "placeholder": {
      "patterns": [
        {
          "match": "(\\$)([0-9]+|#)",
          "name": "variable.other.min"
        }
      ]
    },
    "dictionary": {
      "begin": "(\\{)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.begin.min"
        }
      },
      "end": "(\\})",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.dictionary.end.min"
        }
      },
      "name": "meta.structure.dictionary.min",
      "patterns": [
        {
          "include": "#value"
        }
      ]
    },
    "quoted-symbol": {
      "begin": "(?<=(\\s|^|\\(|\\{))(['])",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.min"
        }
      },
      "end": "(?=(\\s|\\)|\\}|$))",
      "patterns": [
        {
          "match": "[^\\s\\']+",
          "name": "entity.name.function.min"
        }
      ]
    },
    "definitions": {
      "patterns": [
        {
          "match": "(?<=(\\s|^|\\(|\\{))([:@%/+*^])[^:@#=*>%~!\\s]+?(?=(\\s|\\)|\\}|$))",
          "name": "variable.name.min"
        }
      ]
    },
    "constant": {
      "match": "(?<=(\\s|^|\\(|\\{))(true|false|ROOT|pi|e|tau|null)(?=(\\s|\\)|\\}|$))",
      "name": "constant.language.min"
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.min"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.min"
        }
      },
      "name": "string.quoted.double.min",
      "patterns": [
        {
          "include": "#escaped-char"
        },
        {
          "include": "#placeholder"
        }
      ]
    },
    "escaped-char": {
      "patterns": [
        {
          "match": "\\\\[cC]|\\\\[rR]",
          "name": "constant.character.escape.carriagereturn.nim"
        },
        {
          "match": "\\\\[lL]|\\\\[nN]",
          "name": "constant.character.escape.linefeed.nim"
        },
        {
          "match": "\\\\[fF]",
          "name": "constant.character.escape.formfeed.nim"
        },
        {
          "match": "\\\\[tT]",
          "name": "constant.character.escape.tabulator.nim"
        },
        {
          "match": "\\\\[vV]",
          "name": "constant.character.escape.verticaltabulator.nim"
        },
        {
          "match": "\\\\\\\"",
          "name": "constant.character.escape.double-quote.nim"
        },
        {
          "match": "\\\\'",
          "name": "constant.character.escape.single-quote.nim"
        },
        {
          "match": "\\\\[aA]",
          "name": "constant.character.escape.alert.nim"
        },
        {
          "match": "\\\\[bB]",
          "name": "constant.character.escape.backspace.nim"
        },
        {
          "match": "\\\\[eE]",
          "name": "constant.character.escape.escape.nim"
        },
        {
          "match": "\\\\\\\\",
          "name": "constant.character.escape.backslash.nim"
        }
      ]
    },
    "value": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#quotation"
        },
        {
          "include": "#definitions"
        },
        {
          "include": "#type"
        },
        {
          "include": "#control-symbol"
        },
        {
          "include": "#quoted-symbol"
        },
        {
          "include": "#string"
        },
        {
          "include": "#number"
        },
        {
          "include": "#constant"
        }
      ]
    }
  }
}
